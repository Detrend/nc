// Project Nucledian Source File
#pragma once

namespace nc
{
  
//==============================================================================
constexpr vec<f32, 4>::vec(vec3 v3, f32 w)
: x(v3.x)
, y(v3.y)
, z(v3.z)
, w(w)
{
  
}

//==============================================================================
constexpr vec<f32, 4>::vec(const sse::reg128& sse_reg)
: r(sse_reg)
{
  
}

//==============================================================================
constexpr vec<f32, 4>::vec(f32 x, f32 y, f32 z, f32 w)
: x(x)
, y(y)
, z(z)
, w(w)
{
  
}

//==============================================================================
constexpr vec<f32, 4>::vec()
: x(0)
, y(0)
, z(0)
, w(0)
{
  
}

//==============================================================================
constexpr vec<f32, 3>::vec(f32 x, f32 y, f32 z)
: x(x)
, y(y)
, z(z)
{

}

//==============================================================================
constexpr vec<f32, 3>::vec(vec2 v2, f32 z)
: x(v2.x)
, y(v2.y)
, z(z)
{

}

//==============================================================================
constexpr vec<f32, 3>::vec(const vec4& v4)
: x(v4.x)
, y(v4.y)
, z(v4.z)
{
  
}

//==============================================================================
constexpr vec<f32, 3>::vec()
: x(0)
, y(0)
, z(0)
{

}

//==============================================================================
constexpr vec<f32, 2>::vec(f32 x, f32 y)
: x(x)
, y(y)
{

}

//==============================================================================
constexpr vec<f32, 2>::vec()
: x(0)
, y(0)
{

}

//==============================================================================
constexpr vec<f32, 2>::vec(const sse::reg64& sse_reg)
: r(sse_reg)
{
  
}

//==============================================================================
constexpr vec<f32, 4>::vec(f32 v)
: x(v)
, y(v)
, z(v)
, w(v)
{
  
}

//==============================================================================
constexpr vec<f32, 3>::vec(f32 v)
: x(v)
, y(v)
, z(v)
{
  
}

//==============================================================================
constexpr vec<f32, 2>::vec(f32 v)
: x(v)
, y(v)
{
  
}

}

